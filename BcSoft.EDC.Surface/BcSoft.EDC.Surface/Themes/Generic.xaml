<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:BcSoft.EDC.Surface.Controls">

    <Style TargetType="{x:Type local:ProjectDisplayContainer}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="10" Opacity="0.4"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ProjectDisplayContainer">
                    <Grid Background="White">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>
                        <Image x:Name="root" Source="{TemplateBinding Source}"
                               RenderTransformOrigin="0.5,0.5" 
                               Stretch="Fill">
                            <Image.RenderTransform>
                                <ScaleTransform />
                            </Image.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="MouseOver" GeneratedDuration="0:0:0.075" />
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.05" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="root" 
                                                         Storyboard.TargetProperty="(RenderTransform).ScaleX"
                                                         To="1.03" Duration="0" />
                                            <DoubleAnimation Storyboard.TargetName="root" 
                                                         Storyboard.TargetProperty="(RenderTransform).ScaleY"
                                                         To="1.03" Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Image>
                        <TextBlock Grid.Row="1" Text="{TemplateBinding ProjectName}"
                                   HorizontalAlignment="Center" FontSize="18"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <local:LevelToIndentConverter x:Key="LevelToIndentConverter"/>
    <local:CanExpandConverter x:Key="CanExpandConverter"/>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent">
                        <Image x:Name="ExpanderImage" Width="14" Height="15"
                               Source="/BcSoft.EDC.Surface;component/Images/UnExpander.png"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Source" Value="/BcSoft.EDC.Surface;component/Images/Expander.png"
                                    TargetName="ExpanderImage"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:TreeListView}">
        <Setter Property="Background" Value="#F2F2F2F2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TreeListView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Disabled">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <GridViewHeaderRowPresenter Columns="{TemplateBinding Columns}"
                                                            AllowsColumnReorder="{TemplateBinding AllowsColumnReorder}"/>
                                <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                                              VerticalScrollBarVisibility="Auto"
                                              Grid.Row="1">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:TreeListViewItem}">
        <Setter Property="IsExpanded" Value="False"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TreeListViewItem}">
                    <Grid VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Name="Bd"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Padding="{TemplateBinding Padding}">
                            <GridViewRowPresenter VerticalAlignment="Stretch" x:Name="PART_Header" Content="{TemplateBinding Header}"
                                                  Columns="{Binding Columns,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:TreeListView}}" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"  
                                        VerticalAlignment="Stretch"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility"  Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"   Value="false"/>
                                <Condition Property="Width"     Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height"    Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected"  Value="true">
                            <Setter TargetName="Bd" Property="Background" 
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground"  
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"  
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:RowExpander}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:RowExpander}">
                    <ToggleButton x:Name="Expander" 
                                  Style="{StaticResource ExpandCollapseToggleStyle}" 
                                  Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter},RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem},Mode=FindAncestor}}"
                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem},Mode=FindAncestor}}"
                                  Visibility="{Binding IsExpandable, Converter={StaticResource CanExpandConverter},RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem},Mode=FindAncestor}}"
                                  ClickMode="Press"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
